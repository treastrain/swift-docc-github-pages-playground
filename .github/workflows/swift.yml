name: Swift Build & Test

on:
  push:
  pull_request:

jobs:
  swift_55_build:
    name: Build with Swift 5.5
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Show Swift version
      run: swift --version
    - uses: actions/checkout@v2
    - name: Build
      if: ${{ matrix.os == 'macos-11' }}
      run: swift build -v | tee swift-5.5-build-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
    - name: Build with enable test discovery on platforms without Objective-C runtime
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: swift build -v --enable-test-discovery | tee swift-5.5-build-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
    - name: Upload swift build log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: swift 5.5 build log (${{ matrix.os }}, x86_64)
        path: swift-5.5-build-${{ matrix.os }}_x86_64.log
  
  swift_55_test:
    name: Test with Swift 5.5
    needs: swift_55_build
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Show Swift version
      run: swift --version
    - uses: actions/checkout@v2
    - name: Run tests
      if: ${{ matrix.os == 'macos-11' }}
      run: swift test -v | tee swift-5.5-test-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
    - name: Run tests with enable test discovery on platforms without Objective-C runtime
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: swift test -v --enable-test-discovery | tee swift-5.5-test-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
      shell: bash
    - name: Upload swift test log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: swift 5.5 test log (${{ matrix.os }}, x86_64)
        path: swift-5.5-test-${{ matrix.os }}_x86_64.log
  
  swift_56_build:
    name: Build with Swift 5.6
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04] #, macos-12]
    runs-on: ${{ matrix.os }}
    container:
      image: swiftlang/swift:nightly-5.6-focal
    steps:
    - name: Show Swift version
      run: swift --version
    - uses: actions/checkout@v2
    - name: Build
      if: ${{ matrix.os == 'macos-12' }}
      run: swift build -v | tee swift-5.6-build-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
    - name: Build with enable test discovery on platforms without Objective-C runtime
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: swift build -v --enable-test-discovery | tee swift-5.6-build-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
    - name: Upload swift build log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: swift 5.6 build log (${{ matrix.os }}, x86_64)
        path: swift-5.6-build-${{ matrix.os }}_x86_64.log
  
  swift_56_test:
    name: Test with Swift 5.6
    needs: swift_56_build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04] #, macos-12]
    runs-on: ${{ matrix.os }}
    container:
      image: swiftlang/swift:nightly-5.6-focal
    steps:
    - name: Show Swift version
      run: swift --version
    - uses: actions/checkout@v2
    - name: Run tests
      if: ${{ matrix.os == 'macos-12' }}
      run: swift test -v | tee swift-5.6-test-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
    - name: Run tests with enable test discovery on platforms without Objective-C runtime
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: swift test -v --enable-test-discovery | tee swift-5.6-test-${{ matrix.os }}_x86_64.log && exit ${PIPESTATUS[0]}
      shell: bash
    - name: Upload swift test log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: swift 5.6 test log (${{ matrix.os }}, x86_64)
        path: swift-5.6-test-${{ matrix.os }}_x86_64.log