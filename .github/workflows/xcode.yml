name: Xcode Build & Test

on:
  push:
  pull_request:

env:
  SCHEME_NAME: SquareLigatureEraNameDecomposer
  IOS_SIMULATOR_NAME: iPhone 13 mini
  TVOS_SIMULATOR_NAME: Apple TV 4K (2nd generation)
  WATCHOS_SIMULATOR_NAME: Apple Watch Series 7 - 45mm

jobs:
  show_software_information:
    name: Show software information
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Show Xcode list
      run: ls -n /Applications | grep 'Xcode'
    - name: Show the default version of Xcode
      run: xcodebuild -version
    - name: Show lists the targets and configurations in a project, or the schemes in a workspace
      run: xcodebuild -list
    - name: Show a list of destinations
      run: xcodebuild test -scheme ${{ env.SCHEME_NAME }} -showdestinations
    - name: Show xcpretty version
      run: xcpretty --version
  
  xcodebuild_test:
    name: Test with Xcode
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        platform: ['iOS', 'macOS\ (x86_64)', 'Mac\ Catalyst\ (x86_64)', 'tvOS', 'watchOS']
    steps:
    - uses: actions/checkout@v2
    - name: Test the scheme
      run: |
        case ${{ matrix.platform }} in
          'iOS' ) xcodebuild test -scheme ${{ env.SCHEME_NAME }} -destination 'name=${{ env.IOS_SIMULATOR_NAME }}' | tee xcodebuild-test-${{ matrix.platform }}.log | xcpretty --color --report html && exit ${PIPESTATUS[0]} ;;
          'macOS\ (x86_64)' ) xcodebuild test -scheme ${{ env.SCHEME_NAME }} -destination 'platform=macOS,arch=x86_64' | tee xcodebuild-test-${{ matrix.platform }}.log | xcpretty --color --report html && exit ${PIPESTATUS[0]} ;;
          'Mac\ Catalyst\ (x86_64)' ) xcodebuild test -scheme ${{ env.SCHEME_NAME }} -destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst' | tee xcodebuild-test-${{ matrix.platform }}.log | xcpretty --color --report html && exit ${PIPESTATUS[0]} ;;
          'tvOS' ) xcodebuild test -scheme ${{ env.SCHEME_NAME }} -destination 'name=${{ env.TVOS_SIMULATOR_NAME }}' | tee xcodebuild-test-${{ matrix.platform }}.log | xcpretty --color --report html && exit ${PIPESTATUS[0]} ;;
          'watchOS' ) xcodebuild test -scheme ${{ env.SCHEME_NAME }} -destination 'name=${{ env.WATCHOS_SIMULATOR_NAME }}' | tee xcodebuild-test-${{ matrix.platform }}.log | xcpretty --color --report html && exit ${PIPESTATUS[0]} ;;
        esac
    - name: Upload Xcode DerivedData
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Xcode DerivedData (${{ matrix.platform }})
        path: |
            /Users/runner/Library/Developer/Xcode/DerivedData
    - name: Upload Xcode Test report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: xcodebuild test log and report (${{ matrix.platform }})
        path: |
            xcodebuild-test-${{ matrix.platform }}.log
            build/reports/tests.html
